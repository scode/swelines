= Swelines - Software Engineering Guidelines
WORK IN PROGRESS - not yet intended for consumption
:toc:

These are a set of *opinionated* guidelines for software engineering
heavily biased towards my anecdotal experiences writing code in the
industry, at companies of varying sizes.

Think of them as your typical "coding guidlines", except instead of
focusing on style issues and specific rules of a language or
environment, it focues on somewhat more general principles that
generally span many languages and environments.

I try to articulate a somewhat general idea, and provide near-to-real
life practical examples to concretize.

This is intended to be a living document, but the SWEL-NNN "keys" are
intended to remain fixed. Their contents may evolve over time, but
never completely change topic. Some may be de-commissioned over time.

I do not claim that there are in any way unique. Rather, it's a
curated set of opinions that, if more generally adherred to, I believe
would be helpful - especially to larger organizations.

There is no particular order to these entries.

Suggested changes and discussion is welcome as github tickets or pull
requests. But keep in mind that at least for now, ultimately this is
reflecting my opinions. If I cannot be convinced of a change, I may
still be convinced to include a dissenting opinion in this document.

== SWEL-1 - Careful what you depend on

== SWEL-2 - Don't break the abstraction

== SWEL-3 - Why you shouldn't use X

== SWEL-4 - Quality commit messages

== SWEL-5 - Never, ever, silently fail

== SWEL-6 - Limit propagationof bugs

== SWEL-7 - Assume everything is broken

== SWEL-8 - Be explicit and narrow in what you accept
